---
title: "Area and Yield distribution by Crop Establishment"
subtitle: "Using Rice Based Farm Household survey (2021-2022)"
# format: revealjs
format:
  revealjs:
    css: custom-styles.css
    touch: true
    controls: true
    slide-number: true
    transition: fade
    chalkboard: 
      buttons: false
    logo: www/dac.png
    footer: "PhilRice Data Analytics Center"
execute: 
  echo: false
  warning: false
  message: false
  freeze: auto
---


```{r}
#| label: data and lib
#| echo: false
#|
library(tidyverse)
library(DT)
library(htmltools)
library(plotly)
library(shiny)
library(htmlwidgets)
library(geojson)
library(geojsonio)
library(geojsonsf)
library(sf)
library(leaflet)


clean_location <-  function(variable){
  case_match(
    str_to_lower(str_squish(variable)),
    c("region i","ilocos","region 1","ilocos region", "region i (ilocos region)","region 1 (ilocos region)") ~ "Region I (Ilocos Region)",
    c("region ii","region 2","cagayan valley", "region ii (cagayan valley)","region 2 (cagayan valley)") ~ "Region II (Cagayan Valley)",
    c("region iii","region 3","central luzon", "region iii (central luzon)","region 3 (central luzon)") ~ "Region III (Central Luzon)",
    c("region iv-a","southern tagalog","region 4a","calabarzon", "region iv-a (calabarzon)","region 4-a (calabarzon)") ~ "Region IV-A (CALABARZON)",
    c("region v","bicol","region 5","bicol region", "region v (bicol region)","region 5 (bicol region)" ) ~ "Region V (Bicol Region)",
    c("region vi","region 6","western visayas", "region vi (western visayas)", "region 6 (western visayas)") ~ "Region VI (Western Visayas)",
    c("region vii","region 7","central visayas", "region vii (central visayas)", "region 7 (central visayas)") ~ "Region VII (Central Visayas)",
    c("region viii","region 8","eastern visayas", "region viii (eastern visayas)","region 8 (eastern visayas)") ~ "Region VIII (Eastern Visayas)",
    c("region ix","region 9","zamboanga peninsula", "region ix (zamboanga peninsula)", "region 9 (zamboanga peninsula)") ~ "Region IX (Zamboanga Peninsula)",
    c("region x","region 10","northern mindanao", "region x (northern mindanao)","region 10 (northern mindanao)") ~ "Region X (Northern Mindanao)",
    c("region xi","region 11","davao region", "region xi (davao region)","region 11 (davao region)") ~ "Region XI (Davao Region)",
    c("region xii","region 12","soccsksargen", "region xii (soccsksargen)","region 12 (soccsksargen)") ~ "Region XII (SOCCSKSARGEN)",
    c("region xiii","region 13","caraga", "region xiii (caraga)","region 13 (caraga region)","REGION XIII (Caraga) ") ~ "Region XIII (Caraga)",
    c("region iv-b","mimaropa", "region iv-b (mimaropa)","mimaropa region","region 4-b (mimaropa region)" ) ~ "MIMAROPA Region",
    c("cordillera administrative region (car)", "car","cordillera administrative region") ~ "Cordillera Administrative Region (CAR)",
    c("autonomous region in muslim mindanao (armm)","armm","barmm","bangsamoro autonomous region in muslim mindanao (barmm)", "bangsamoro autonomous region in muslim mindanao") ~ "Bangsamoro Autonomous Region in Muslim Mindanao (BARMM)",
    c("city of davao","davao city")~"davao city",
    c("cotabato (north cotabato)","north cotabato")~"north cotabato",
    c("compostela valley","davao de oro","davao de oro (compostela valley)")~"davao de oro (compostela valley)",
    c("western samar","samar","samar (western samar")~"samar (western samar)",
    c("maguindanao (excluding cotabato city)") ~ "maguindanao",
    c("basilan (excluding city of isabela)")~"basilan",
    c("ncr")~"national capital region (ncr)",
    c("agusan norte")~"agusan del norte",
    c("agusan sur")~"agusan del sur",
    c("davao norte")~"davao del norte",
    c("davao sur")~"davao del sur",
    c("lanao norte")~"lanao del norte",
    c("lanao sur")~"lanao del sur",
    c("mt. province")~"mountain province",
    c("mindoro occidental") ~"occidental mindoro",
    c("mindoro oriental") ~"oriental mindoro",
    c("surigao norte")~"surigao del norte",
    c("surigao sur")~"surigao del sur",
    c("zamboanga norte")~"zamboanga del norte",
    c("zamboanga sur")~"zamboanga del sur",
    .default = str_to_lower(variable)
  )
}


# sua_ensemb<- readRDS("ensemb_phl_dt2030.rds")


# sua_target <- readRDS("sua_new5_dt_phl.rds")

# seedclass_area <-  readRDS("AreabySeedclass.RDS")

area_cropestab <- readRDS("areacropestab.rds")

yield_cropestab <-  readRDS("yield_bycropsetab.rds")

# nis_total <- read_csv("nis_total.csv") |>
#   pivot_longer(Dry1_Rice:Wet_tot,
#                names_to = c("seas","comm"),
#                names_sep ="_",
#                values_to = "val")


# nis_df <-  readRDS("nis_df.rds")

province_map <-  geojson_read("province.geojson", what="sp") %>%
  st_as_sf() %>%
  filter(psgc_province!="PH099700000") %>%
  mutate(location = clean_location(province))


```

## Area % planted to Direct Seeding (RBFHS 2022 DS) {.tiny-text}

```{r}
#|echo: false

are_dseed <- 
area_cropestab |>
  filter(location=="0-philippines")

area_dseed_DS <-   
are_dseed |>
  filter(data_season=="DS") |> 
  pull(perce_direct) |> 
  round(digits=2)

area_dssed_WS <- 
are_dseed |>
  filter(data_season=="WS") |> 
  pull(perce_direct) |> 
  round(digits=2)
  


```

::: columns
::: {.column width="30%"}
::: flex-row
::: {.value-box .blue}
::: value-number
`r area_dseed_DS` %
:::

::: value-title
Area planted with Direct Seeding
:::
:::
:::
:::

::: {.column width="70%"}
```{r}
#|echo: false
#|fig-height: 12

cropestab_map <- 
province_map |> left_join(area_cropestab |> 
                            filter(year==2022,
                                   locType==2) |> 
                            mutate(location = clean_location(location)) |> 
                            select(location,totalarea:perce_direct)
                          )


bins <- quantile(cropestab_map$direct, probs = seq(0, 1, length.out = 5), na.rm = TRUE, names = FALSE)

pal <- colorBin(palette =c("#00F4FF",
                            "#00C5E9",
                            "#004CFF",
                            "#56A3F2"
                            ),
                 na.color = "white",
                 domain = cropestab_map$perce_direct[cropestab_map$perce_direct>0], 
                 bins = c(0,25,50,75,100))

# pal <- colorBin(palette = "BuGn", domain = cropestab_map$direct, bins = c(0,1,10,25,50,100,Inf))

labels <- sprintf("Province: %s<br>Percent: %0.2f", str_to_title(cropestab_map$location), cropestab_map$perce_direct) %>%
  lapply(htmltools::HTML)

cropestab_map <- 
  cropestab_map |> 
  mutate(color = if_else(perce_direct==0, "white", pal(perce_direct)))

# Plot the map
leaflet(cropestab_map,
        width=700,
        height = 600) %>%
  addProviderTiles("CartoDB.VoyagerNoLabels",
                   options = providerTileOptions(minZoom =5)) %>%
  setView(lng = 121.7740+1, lat = 12.8797, zoom = 6) |> 
  addPolygons(
    fillColor = ~color,
    weight = 1,
    opacity = 1,
    color = "black",
    dashArray = "3",
    fillOpacity = 0.7,
    highlight = highlightOptions(weight = 3, color = "#666", fillOpacity = 0.7),
    label = labels
  ) %>%
  addLegend(pal = pal, values = ~perce_direct, 
            title = htmltools::HTML("Rice area planted with <br>direct seeding method (2022 DS)"), 
            opacity = 0.7,
              labFormat = function(type, cuts, p) {
    c("<25", "25-50", "50-75", "More than 75")  # matches the bins
  },
  na.label = "No adoption") |> 
      addControl(
    html = "<div style='font-size: 12px;font-style: italic;'>Source:<br>RBFHS 2021-2022</div>",
    position = "bottomleft"
  )
```
:::
:::

## Area % planted to Direct Seeding (RBFHS 2021 WS) {.tiny-text}

::: columns
::: {.column width="30%"}
::: flex-row
::: {.value-box .blue}
::: value-number
`r area_dssed_WS` %
:::

::: value-title
Area planted with Direct Seeding
:::
:::
:::
:::

::: {.column width="70%"}
```{r}
#|echo: false
#|fig-height: 12

cropestab_map2 <- 
province_map |> left_join(area_cropestab |> 
                            filter(year==2021,
                                   locType==2) |> 
                            mutate(location = clean_location(location)) |> 
                            select(location,totalarea:perce_direct)
                          )


bins2 <- quantile(cropestab_map2$perce_direct, probs = seq(0, 1, length.out = 5), na.rm = TRUE, names = FALSE)
pal2 <- colorBin(palette =c("#00F4FF",
                            "#00C5E9",
                            "#004CFF",
                            "#56A3F2"
                            ),
                 na.color = "white",
                 domain = cropestab_map2$perce_direct[cropestab_map2$perce_direct>0], 
                 bins = c(0,25,50,75,100))

labels <- sprintf("Province: %s<br>Percent: %0.2f", str_to_title(cropestab_map2$location), cropestab_map2$perce_direct) %>%
  lapply(htmltools::HTML)


cropestab_map2 <- 
  cropestab_map2 |> 
  mutate(color = if_else(perce_direct==0, "white", pal2(perce_direct)))

# Plot the map
leaflet(cropestab_map2,
        width = 700,
        height = 600) %>%
  addProviderTiles("CartoDB.VoyagerNoLabels",
                   options = providerTileOptions(minZoom =5)) %>%
   setView(lng = 121.7740+1, lat = 12.8797, zoom = 6) |> 
  addPolygons(
    fillColor = ~color,
    weight = 1,
    opacity = 1,
    color = "black",
    dashArray = "3",
    fillOpacity = 0.7,
    highlight = highlightOptions(weight = 3, color = "#666", fillOpacity = 0.7),
    label = labels
  ) %>%
  addLegend(pal = pal, values = ~perce_direct, 
            title = htmltools::HTML("Rice area planted with <br>direct seeding method (2021 WS)"), 
            opacity = 0.7,
              labFormat = function(type, cuts, p) {
    c("<25", "25-50", "50-75", "More than 75")  # matches the bins
  },
  na.label = "No adoption") |> 
      addControl(
    html = "<div style='font-size: 12px;font-style: italic;'>Source:<br>RBFHS 2021-2022</div>",
    position = "bottomleft"
  )
```
:::
:::

## Yield distribution for Direct Seeding (RBFHS 2021 WS) {.tiny-text}

```{r}



yld_ds2021<- 
yield_cropestab |> 
  filter(year==2021) |> 
  filter(location == "0-philippines")|> 
  mutate(direct_yield = round(direct_yield,digits = 2)) |> 
  pull(direct_yield)

yld_ds2022<- 
yield_cropestab |> 
  filter(year==2022) |> 
  filter(location == "0-philippines")|> 
  mutate(direct_yield = round(direct_yield,digits = 2)) |> 
  pull(direct_yield)

yld_tr2021<- 
yield_cropestab |> 
  filter(year==2021) |> 
  filter(location == "0-philippines")|> 
  mutate(trans_yield = round(trans_yield,digits = 2)) |> 
  pull(trans_yield)

yld_tr2022<- 
yield_cropestab |> 
  filter(year==2022) |> 
  filter(location == "0-philippines")|>
  mutate(trans_yield = round(trans_yield,digits = 2)) |> 
  pull(trans_yield)

```
::: columns
::: {.column width="30%"}
::: flex-row
::: {.value-box .blue}
::: value-number
`r yld_ds2021` mt/ha
:::

::: value-title
National yield average for Direct Seeding (RBFHS 2021 WS)
:::
:::
:::
:::

::: {.column width="70%"}
```{r}
#|echo: false
#|fig-height: 12

yield_dsmap <- 
province_map |> left_join(yield_cropestab |> 
                            filter(year==2021,
                                   locType==2) |> 
                            mutate(location = clean_location(location)) |> 
                            select(location,trans_yield:direct_yield)
                          )

yield_pal_dsmap <- colorBin(palette =c("#F1A63C",
                                "#FFF883",
                                "#29883E",
                                "#3B93E4",
                                "#B07AA1"),
                        na.color = "grey",
                        domain = yield_dsmap$direct_yield[yield_dsmap$direct_yield>0], 
                        bins = c(0,3,4,5,6,Inf))


yield_dsmap2 <- 
  yield_dsmap |> 
  mutate(color = if_else(direct_yield==0 |is.nan(direct_yield), "grey",
                         yield_pal_dsmap(direct_yield)))

labels_yld <- sprintf("Province: %s<br>Average Yield: %0.2f", 
                          str_to_title(yield_dsmap$location),
                          yield_dsmap$direct_yield) %>%
  lapply(htmltools::HTML)






# Plot the map
leaflet(yield_dsmap2,
        width = 700,
        height = 600) %>%
  addProviderTiles("CartoDB.VoyagerNoLabels",
                   options = providerTileOptions(minZoom =5)) %>%
  setView(lng = 121.7740+1, lat = 12.8797, zoom = 6) |> 
  addPolygons(
    fillColor =~color,
    fillOpacity = 1,
    weight = 1,
    opacity = 1,
    color = "black",
    highlight = highlightOptions(weight = 3, color = "#666", fillOpacity = 0.7),
    label = labels_yld
  ) %>%
    addLegend(pal = yield_pal_dsmap, 
              values = ~direct_yield, 
              title = htmltools::HTML("2021WS Average Yield of Palay<br> in Direct seeded areas, by province"), 
              
              opacity = 0.7,
              labFormat = function(type, cuts, p) {
                c("<=3", 
                  ">3 to 4", 
                  ">4 to 5", 
                  ">5 to 6",
                  ">6")  # matches the bins
              },
              na.label = "No production") |> 
    addControl(
    html = "<div style='font-size: 12px;font-style: italic;'>Source:<br>PSA</div>",
    position = "bottomleft"
  )

```
:::
:::


## Yield distribution for Direct Seeding (RBFHS 2022 DS) {.tiny-text}

::: columns
::: {.column width="30%"}
::: flex-row
::: {.value-box .blue}
::: value-number
`r yld_ds2022` mt/ha
:::

::: value-title
National yield average for Direct Seeding (RBFHS 2022 DS)
:::
:::
:::
:::

::: {.column width="70%"}
```{r}
#|echo: false
#|fig-height: 12

yield_dsmap22 <- 
province_map |> left_join(yield_cropestab |> 
                            filter(year==2022,
                                   locType==2) |> 
                            mutate(location = clean_location(location)) |> 
                            select(location,trans_yield:direct_yield)
                          )

yield_pal_dsmap22 <- colorBin(palette =c("#F1A63C",
                                "#FFF883",
                                "#29883E",
                                "#3B93E4",
                                "#B07AA1"),
                        na.color = "grey",
                        domain = yield_dsmap22$direct_yield[yield_dsmap22$direct_yield>0], 
                        bins = c(0,3,4,5,6,Inf))


yield_dsmap22b <- 
  yield_dsmap22 |> 
  mutate(color = if_else(direct_yield==0 |is.nan(direct_yield), "grey",
                         yield_pal_dsmap(direct_yield)))

labels_yld22 <- sprintf("Province: %s<br>Average Yield: %0.2f", 
                          str_to_title(yield_dsmap22b$location),
                          yield_dsmap22b$direct_yield) %>%
  lapply(htmltools::HTML)






# Plot the map
leaflet(yield_dsmap22b,
        width = 700,
        height = 600) %>%
  addProviderTiles("CartoDB.VoyagerNoLabels",
                   options = providerTileOptions(minZoom =5)) %>%
  setView(lng = 121.7740+1, lat = 12.8797, zoom = 6) |> 
  addPolygons(
    fillColor =~color,
    fillOpacity = 1,
    weight = 1,
    opacity = 1,
    color = "black",
    highlight = highlightOptions(weight = 3, color = "#666", fillOpacity = 0.7),
    label = labels_yld22
  ) %>%
    addLegend(pal = yield_pal_dsmap22, 
              values = ~direct_yield, 
              title = htmltools::HTML("2022DS Average Yield of Palay<br> in Direct seeded areas, by province"), 
              
              opacity = 0.7,
              labFormat = function(type, cuts, p) {
                c("<=3", 
                  ">3 to 4", 
                  ">4 to 5", 
                  ">5 to 6",
                  ">6")  # matches the bins
              },
              na.label = "No production") |> 
    addControl(
    html = "<div style='font-size: 12px;font-style: italic;'>Source:<br>PSA</div>",
    position = "bottomleft"
  )

```
:::
:::

## Yield distribution for Transplanting (RBFHS 2021 WS) {.tiny-text}

::: columns
::: {.column width="30%"}
::: flex-row
::: {.value-box .blue}
::: value-number
`r yld_tr2021` mt/ha
:::

::: value-title
National yield average for Transplanting (RBFHS 2021 WS)
:::
:::
:::
:::

::: {.column width="70%"}
```{r}
#|echo: false
#|fig-height: 12

yield_trmap <- 
province_map |> left_join(yield_cropestab |> 
                            filter(year==2021,
                                   locType==2) |> 
                            mutate(location = clean_location(location)) |> 
                            select(location,trans_yield:direct_yield)
                          )

yield_pal_trmap <- colorBin(palette =c("#F1A63C",
                                "#FFF883",
                                "#29883E",
                                "#3B93E4",
                                "#B07AA1"),
                        na.color = "grey",
                        domain = yield_trmap$trans_yield[yield_trmap$trans_yield>0], 
                        bins = c(0,3,4,5,6,Inf))


yield_trmap2 <- 
  yield_trmap |> 
  mutate(color = if_else(trans_yield==0 |is.nan(trans_yield), "grey",
                         yield_pal_trmap(trans_yield)))

labels_yld <- sprintf("Province: %s<br>Average Yield: %0.2f", 
                          str_to_title(yield_trmap2$location),
                          yield_trmap2$trans_yield) %>%
  lapply(htmltools::HTML)






# Plot the map
leaflet(yield_trmap2,
        width = 700,
        height = 600) %>%
  addProviderTiles("CartoDB.VoyagerNoLabels",
                   options = providerTileOptions(minZoom =5)) %>%
  setView(lng = 121.7740+1, lat = 12.8797, zoom = 6) |> 
  addPolygons(
    fillColor =~color,
    fillOpacity = 1,
    weight = 1,
    opacity = 1,
    color = "black",
    highlight = highlightOptions(weight = 3, color = "#666", fillOpacity = 0.7),
    label = labels_yld
  ) %>%
    addLegend(pal = yield_pal_trmap, 
              values = ~trans_yield, 
              title = htmltools::HTML("2021WS Average Yield of Palay<br> in Transplanted areas, by province"), 
              
              opacity = 0.7,
              labFormat = function(type, cuts, p) {
                c("<=3", 
                  ">3 to 4", 
                  ">4 to 5", 
                  ">5 to 6",
                  ">6")  # matches the bins
              },
              na.label = "No production") |> 
    addControl(
    html = "<div style='font-size: 12px;font-style: italic;'>Source:<br>PSA</div>",
    position = "bottomleft"
  )

```
:::
:::


## Yield distribution for Transplanting (RBFHS 2022 DS) {.tiny-text}

::: columns
::: {.column width="30%"}
::: flex-row
::: {.value-box .blue}
::: value-number
`r yld_tr2022` mt/ha
:::

::: value-title
National yield average for Direct Seeding (RBFHS 2022 DS)
:::
:::
:::
:::

::: {.column width="70%"}
```{r}
#|echo: false
#|fig-height: 12

yield_trmap22 <- 
province_map |> left_join(yield_cropestab |> 
                            filter(year==2022,
                                   locType==2) |> 
                            mutate(location = clean_location(location)) |> 
                            select(location,trans_yield:direct_yield)
                          )

yield_pal_trmap22 <- colorBin(palette =c("#F1A63C",
                                "#FFF883",
                                "#29883E",
                                "#3B93E4",
                                "#B07AA1"),
                        na.color = "grey",
                        domain = yield_trmap22$trans_yield[yield_trmap22$trans_yield>0], 
                        bins = c(0,3,4,5,6,Inf))


yield_trmap22b <- 
  yield_trmap22 |> 
  mutate(color = if_else(trans_yield==0 |is.nan(trans_yield), "grey",
                         yield_pal_trmap22(trans_yield)))

labels_yld22 <- sprintf("Province: %s<br>Average Yield: %0.2f", 
                          str_to_title(yield_trmap22b$location),
                          yield_trmap22b$trans_yield) %>%
  lapply(htmltools::HTML)






# Plot the map
leaflet(yield_trmap22b,
        width = 700,
        height = 600) %>%
  addProviderTiles("CartoDB.VoyagerNoLabels",
                   options = providerTileOptions(minZoom =5)) %>%
  setView(lng = 121.7740+1, lat = 12.8797, zoom = 6) |> 
  addPolygons(
    fillColor =~color,
    fillOpacity = 1,
    weight = 1,
    opacity = 1,
    color = "black",
    highlight = highlightOptions(weight = 3, color = "#666", fillOpacity = 0.7),
    label = labels_yld22
  ) %>%
    addLegend(pal = yield_pal_trmap22, 
              values = ~trans_yield, 
              title = htmltools::HTML("2022DS Average Yield of Palay<br> in Transplanted areas, by province"), 
              
              opacity = 0.7,
              labFormat = function(type, cuts, p) {
                c("<=3", 
                  ">3 to 4", 
                  ">4 to 5", 
                  ">5 to 6",
                  ">6")  # matches the bins
              },
              na.label = "No production") |> 
    addControl(
    html = "<div style='font-size: 12px;font-style: italic;'>Source:<br>PSA</div>",
    position = "bottomleft"
  )

```
:::
:::

